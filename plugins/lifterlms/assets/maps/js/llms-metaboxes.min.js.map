{"version":3,"sources":["llms-metaboxes.js"],"names":["$","document","ready","val","hide","collapseHeaderClicked","$parent","this","closest","$siblings","siblings","toggleClass","trigger","find","slideToggle","each","removeClass","slideUp","fn","llmsCollapsible","off","on","window","llms","metaboxes","repeaters","$repeaters","init","self","length","LLMS","wait_for","tinyMCE","load","bind","attr","handle_submit","$repeater","$rows","add_row","sortable","handle","items","start","event","ui","addClass","stop","item","ed_id","EditorManager","execCommand","save","e","stopPropagation","$row","confirm","l10n","translate","remove","setTimeout","data","expand","$model","clone_row","new_index","editor","reindex","key","$field","hasClass","i","append","title","bind_row","bind_row_header","llmsSelect2","width","llmsStudentsSelect2","bind_datepickers","bind_controllers","$title","text","$ed","clone","wait","$btn","$spinner","parent","is","removeAttr","preventDefault","setInterval","clearInterval","store","obj","index","old_index","replace_attr","$el","str","replace","serialize","rows","name","editors","getContent","push","action","cb","store_action","Ajax","call","beforeSend","Spinner","success","r","bindings","post_select","bind_tabs","bind_mce_fixes","selector","func","$selector","reduced","filter","post","post_type","bind_cb_controllers","$controllers","$cb","$controlled","slideDown","possible","vals","indexOf","split","bind_datepicker","format","altFormat","altField","maxDate","minDate","datepicker","dateFormat","date","parseDate","_defaults","value","test","$datepickers","bind_editables","$fields","make_editable","min_date","max_date","$label","type","required","options","JSON","parse","$input","$picker","hour","minute","empty","bind_llms_engagement","engagement_type","$select","cpt","bind_course","wp","dispatch","editPost","meta","_llms_length","target","bind_llms_membership","$table","toggle_header_row","first","show","get_course_ids","courses","$container","course_id","fadeOut","prepend","message","replaceWith","id","alert","%s","$tr","admin_url","error","jqxhr","code","error_msg","complete","bind_llms_order","txn_id","refundable_amount","gateway_supports","gateway_title","$new_row","$gateway_btn","after","next","one","field","gateway","gateway_data","$wrap","enabled","undefined","includes","select","getMetaBoxesPerLocation","shouldRun","toFix","get","settings","bind_merge_code_buttons","$wrappers","tinymce","insertContent","$metabox","tab_id","multi","noViewBtn","editBtn","llmsPostsSelect2","msg","parseInt","home_url","bind_tables","jQuery"],"mappings":"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","file":"../../js/llms-metaboxes.min.js","sourcesContent":["/**\n * LifterLMS Admin Panel Metabox Functions\n *\n * @since 3.0.0\n * @version 7.1.1\n */\n ( function( $ ) {\n\n\t $( document ).ready( function() {\n\t\t // Avoid confusion by hiding the visibility option for coupons and vouchers if currently set to public.\n\t\t if ( $( 'input[name=\"visibility\"]:checked' ).val() === 'public' ) {\n\t\t\t $( 'body.post-type-llms_coupon #visibility, body.post-type-llms_voucher #visibility' ).hide();\n\t\t }\n\t } );\n\n\t const collapseHeaderClicked = function() {\n\t\t var $parent = $(this).closest('.llms-collapsible'),\n\t\t\t $siblings = $parent.siblings('.llms-collapsible');\n\n\t\t $parent.toggleClass('opened').trigger('llms-collapsible-toggled');\n\n\t\t $parent.find('.llms-collapsible-body').slideToggle(400);\n\n\t\t $siblings.each(function () {\n\t\t\t $(this).removeClass('opened');\n\t\t\t $(this).find('.llms-collapsible-body').slideUp(400);\n\t\t });\n\t }\n\n\t /**\n\t * jQuery plugin to allow \"collapsible\" sections\n\t *\n\t * @return  jQuery object\n\t * @since   3.0.0\n\t * @version 3.29.0\n\t */\n\t$.fn.llmsCollapsible = function() {\n\n\t\tvar $group = this;\n\n\t\tthis.off( 'click', '.llms-collapsible-header', collapseHeaderClicked )\n\t\t\t.on( 'click', '.llms-collapsible-header', collapseHeaderClicked );\n\n\t\treturn this;\n\n\t};\n\n\twindow.llms = window.llms || {};\n\n\tvar Metaboxes = function() {\n\n\t\t/**\n\t\t * load all partials\n\t\t */\n\t\t/**\n\t\t * LifterLMS Admin Metabox Repeater Field\n\t\t *\n\t\t * @package LifterLMS/Scripts/Partials\n\t\t *\n\t\t * @since 3.11.0\n\t\t * @version 5.3.2\n\t\t */\n\t\t\n\t\tthis.repeaters = {\n\t\t\n\t\t\t/**\n\t\t\t * Reference to the parent metabox class\n\t\t\t *\n\t\t\t * @type {Object}\n\t\t\t */\n\t\t\tmetaboxes: this,\n\t\t\n\t\t\t/**\n\t\t\t * A jQuery selector for all repeater elements on the current screen\n\t\t\t *\n\t\t\t * @type {Object}\n\t\t\t */\n\t\t\t$repeaters: null,\n\t\t\n\t\t\t/**\n\t\t\t * Init\n\t\t\t *\n\t\t\t * @since 3.11.0\n\t\t\t * @since 3.23.0 Unknown.\n\t\t\t *\n\t\t\t * @return {void}\n\t\t\t */\n\t\t\tinit: function() {\n\t\t\n\t\t\t\tvar self = this;\n\t\t\n\t\t\t\tself.$repeaters = $( '.llms-mb-list.repeater' );\n\t\t\n\t\t\t\tif ( self.$repeaters.length ) {\n\t\t\n\t\t\t\t\t// Wait for tinyMCE just in case their editors in the repeaters.\n\t\t\t\t\tLLMS.wait_for(\n\t\t\t\t\t\tfunction() {\n\t\t\t\t\t\t\treturn ( 'undefined' !== typeof tinyMCE );\n\t\t\t\t\t\t},\n\t\t\t\t\t\tfunction() {\n\t\t\t\t\t\t\tself.load();\n\t\t\t\t\t\t\tself.bind();\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\t\t\n\t\t\t\t\t/**\n\t\t\t\t\t * On click of any post submit buttons add some data to the submit button\n\t\t\t\t\t * so we can see which button to trigger after repeaters are finished.\n\t\t\t\t\t */\n\t\t\t\t\t$( '#post input[type=\"submit\"], #post-preview' ).on( 'click', function() {\n\t\t\t\t\t\t$( this ).attr( 'data-llms-clicked', 'yes' );\n\t\t\t\t\t} );\n\t\t\n\t\t\t\t\t// Handle post submission.\n\t\t\t\t\t$( '#post' ).on( 'submit', self.handle_submit );\n\t\t\n\t\t\t\t}\n\t\t\n\t\t\t},\n\t\t\n\t\t\t/**\n\t\t\t * Bind DOM Events\n\t\t\t *\n\t\t\t * @since 3.11.0\n\t\t\t * @since 3.13.0 Unknown.\n\t\t\t * @since 5.3.2 Don't remove the model's mceEditor instance (it's removed before cloning a row now).\n\t\t\t *\n\t\t\t * @return {void}\n\t\t\t */\n\t\t\tbind: function() {\n\t\t\n\t\t\t\tvar self = this;\n\t\t\n\t\t\t\tself.$repeaters.each( function() {\n\t\t\n\t\t\t\t\tvar $repeater = $( this ),\n\t\t\t\t\t\t$rows     = $repeater.find( '.llms-repeater-rows' );\n\t\t\n\t\t\t\t\t// For the repeater + button.\n\t\t\t\t\t$repeater.find( '.llms-repeater-new-btn' ).on( 'click', function() {\n\t\t\t\t\t\tself.add_row( $repeater, null, true );\n\t\t\t\t\t} );\n\t\t\n\t\t\t\t\t// Make repeater rows sortable.\n\t\t\t\t\t$rows.sortable( {\n\t\t\t\t\t\thandle: '.llms-drag-handle',\n\t\t\t\t\t\titems: '.llms-repeater-row',\n\t\t\t\t\t\tstart: function( event, ui ) {\n\t\t\t\t\t\t\t$rows.addClass( 'dragging' );\n\t\t\t\t\t\t},\n\t\t\t\t\t\tstop: function( event, ui ) {\n\t\t\t\t\t\t\t$rows.removeClass( 'dragging' );\n\t\t\n\t\t\t\t\t\t\tvar $eds = ui.item.find( 'textarea.wp-editor-area' );\n\t\t\t\t\t\t\t$eds.each( function() {\n\t\t\t\t\t\t\t\tvar ed_id = $( this ).attr( 'id' );\n\t\t\t\t\t\t\t\ttinyMCE.EditorManager.execCommand( 'mceRemoveEditor', true, ed_id );\n\t\t\t\t\t\t\t\ttinyMCE.EditorManager.execCommand( 'mceAddEditor', true, ed_id );\n\t\t\t\t\t\t\t} );\n\t\t\n\t\t\t\t\t\t\tself.save( $repeater );\n\t\t\t\t\t\t},\n\t\t\t\t\t} );\n\t\t\n\t\t\t\t\t$repeater.on( 'click', '.llms-repeater-remove', function( e ) {\n\t\t\t\t\t\te.stopPropagation();\n\t\t\t\t\t\tvar $row = $( this ).closest( '.llms-repeater-row' );\n\t\t\t\t\t\tif ( window.confirm( LLMS.l10n.translate( 'Are you sure you want to delete this row? This cannot be undone.' ) ) ) {\n\t\t\t\t\t\t\t$row.remove();\n\t\t\t\t\t\t\tsetTimeout( function() {\n\t\t\t\t\t\t\t\tself.save( $repeater );\n\t\t\t\t\t\t\t}, 1 );\n\t\t\t\t\t\t}\n\t\t\t\t\t} );\n\t\t\n\t\t\t\t} );\n\t\t\n\t\t\t},\n\t\t\n\t\t\t/**\n\t\t\t * Add a new row to a repeater rows group\n\t\t\t *\n\t\t\t * @since 3.11.0\n\t\t\t * @since 5.3.2 Use `self.clone_row()` to retrieve the model's base HTML for the row to be added.\n\t\t\t *\n\t\t\t * @param {Object}  $repeater A jQuery selector for the repeater to add a row to.\n\t\t\t * @param {Object}  data      Optional object of data to fill fields in the row with.\n\t\t\t * @param {Boolean} expand    If true, will automatically open the row after adding it to the dom.\n\t\t\t * @return {void}\n\t\t\t */\n\t\t\tadd_row: function( $repeater, data, expand ) {\n\t\t\n\t\t\t\tvar self      = this,\n\t\t\t\t\t$rows     = $repeater.find( '.llms-repeater-rows' ),\n\t\t\t\t\t$model    = $repeater.find( '.llms-repeater-model' ),\n\t\t\t\t\t$row      = self.clone_row( $model.find( '.llms-repeater-row' ) ),\n\t\t\t\t\tnew_index = $repeater.find( '.llms-repeater-row' ).length,\n\t\t\t\t\teditor    = self.reindex( $row, new_index );\n\t\t\n\t\t\t\tif ( data ) {\n\t\t\t\t\t$.each( data, function( key, val ) {\n\t\t\n\t\t\t\t\t\tvar $field = $row.find( '[name^=\"' + key + '\"]' );\n\t\t\n\t\t\t\t\t\tif ( $field.hasClass( 'llms-select2-student' ) ) {\n\t\t\t\t\t\t\t$.each( val, function( i, data ) {\n\t\t\t\t\t\t\t\t$field.append( '<option value=\"' + data.key + '\" selected=\"selected\">' + data.title + '</option>' )\n\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t\t$field.trigger( 'change' );\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t$field.val( val );\n\t\t\t\t\t\t}\n\t\t\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\n\t\t\t\tsetTimeout( function() {\n\t\t\t\t\tself.bind_row( $row );\n\t\t\t\t}, 1 );\n\t\t\n\t\t\t\t$rows.append( $row );\n\t\t\t\tif ( expand ) {\n\t\t\t\t\t$row.find( '.llms-collapsible-header' ).trigger( 'click' );\n\t\t\t\t}\n\t\t\t\ttinyMCE.EditorManager.execCommand( 'mceAddEditor', true, editor );\n\t\t\n\t\t\t\t$repeater.trigger( 'llms-new-repeater-row', {\n\t\t\t\t\t$row: $row,\n\t\t\t\t\tdata: data,\n\t\t\t\t} );\n\t\t\n\t\t\t},\n\t\t\n\t\t\t/**\n\t\t\t * Bind DOM events for a single repeater row\n\t\t\t *\n\t\t\t * @since 3.11.0\n\t\t\t * @since 3.13.0 Unknown.\n\t\t\t *\n\t\t\t * @param {Object} $row A jQuery selector for the row.\n\t\t\t * @return {void}\n\t\t\t */\n\t\t\tbind_row: function( $row ) {\n\t\t\n\t\t\t\tthis.bind_row_header( $row );\n\t\t\n\t\t\t\t$row.find( '.llms-select2' ).llmsSelect2( {\n\t\t\t\t\twidth: '100%',\n\t\t\t\t} );\n\t\t\n\t\t\t\t$row.find( '.llms-select2-student' ).llmsStudentsSelect2();\n\t\t\n\t\t\t\tthis.metaboxes.bind_datepickers( $row.find( '.llms-datepicker' ) );\n\t\t\t\tthis.metaboxes.bind_controllers( $row.find( '[data-is-controller]' ) );\n\t\t\t\t// This.metaboxes.bind_merge_code_buttons( $row.find( '.llms-merge-code-wrapper' ) );.\n\t\t\t},\n\t\t\n\t\t\t/**\n\t\t\t * Bind row header events\n\t\t\t *\n\t\t\t * @since 3.11.0\n\t\t\t *\n\t\t\t * @param {Object} $row jQuery selector for the row.\n\t\t\t * @return {void}\n\t\t\t */\n\t\t\tbind_row_header: function( $row ) {\n\t\t\n\t\t\t\t// Handle the title field binding.\n\t\t\t\tvar $title = $row.find( '.llms-repeater-title' ),\n\t\t\t\t\t$field = $row.find( '.llms-collapsible-header-title-field' );\n\t\t\n\t\t\t\t$title.attr( 'data-default', $title.text() );\n\t\t\n\t\t\t\t$field.on( 'keyup focusout blur', function() {\n\t\t\t\t\tvar val = $( this ).val();\n\t\t\t\t\tif ( ! val ) {\n\t\t\t\t\t\tval = $title.attr( 'data-default' );\n\t\t\t\t\t}\n\t\t\t\t\t$title.text( val );\n\t\t\t\t} ).trigger( 'keyup' );\n\t\t\n\t\t\t},\n\t\t\n\t\t\t/**\n\t\t\t * Create a copy of the model's row after removing any tinyMCE editor instances present in the model.\n\t\t\t *\n\t\t\t * @since 5.3.2\n\t\t\t *\n\t\t\t * @param {Object} $row A jQuery object of the row to be cloned.\n\t\t\t * @return {Object} A clone of the jQuery object.\n\t\t\t */\n\t\t\tclone_row: function( $row ) {\n\t\t\n\t\t\t\t$ed = $row.find( '.editor textarea' );\n\t\t\t\tif ( $ed.length ) {\n\t\t\t\t\ttinyMCE.EditorManager.execCommand( 'mceRemoveEditor', true, $ed.attr( 'id' ) );\n\t\t\t\t}\n\t\t\n\t\t\t\treturn $row.clone()\n\t\t\n\t\t\t},\n\t\t\n\t\t\t/**\n\t\t\t * Handle WP Post form submission to ensure repeaters are saved before submitting the form to save/publish the post\n\t\t\t *\n\t\t\t * @since 3.11.0\n\t\t\t * @since 3.23.0 Unknown.\n\t\t\t *\n\t\t\t * @param {Object} e An event object.\n\t\t\t * @return {void}\n\t\t\t */\n\t\t\thandle_submit: function( e ) {\n\t\t\n\t\t\t\t// Get the button used to submit the form.\n\t\t\t\tvar $btn     = $( '#post [data-llms-clicked=\"yes\"]' ),\n\t\t\t\t\t$spinner = $btn.parent().find( '.spinner' );\n\t\t\n\t\t\t\tif ( $btn.is( '#post-preview' ) ) {\n\t\t\t\t\t$btn.removeAttr( 'data-llms-clicked' );\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\n\t\t\t\te.preventDefault();\n\t\t\n\t\t\t\t// Core UX to prevent multi-click/or the appearance of a delay.\n\t\t\t\t$( '#post input[type=\"submit\"]' ).addClass( 'disabled' ).attr( 'disabled', 'disabled' );\n\t\t\t\t$spinner.addClass( 'is-active' );\n\t\t\n\t\t\t\tvar self = window.llms.metaboxes.repeaters,\n\t\t\t\t\ti    = 0,\n\t\t\t\t\twait;\n\t\t\n\t\t\t\tself.$repeaters.each( function() {\n\t\t\t\t\tself.save( $( this ) );\n\t\t\t\t} );\n\t\t\n\t\t\t\twait = setInterval( function() {\n\t\t\n\t\t\t\t\tif ( i >= 59 || ! $( '.llms-mb-list.repeater.processing' ).length ) {\n\t\t\n\t\t\t\t\t\tclearInterval( wait );\n\t\t\t\t\t\t$( '#post' ).off( 'submit', this.handle_submit );\n\t\t\t\t\t\t$spinner.removeClass( 'is-active' );\n\t\t\t\t\t\t$btn.removeClass( 'disabled' ).removeAttr( 'disabled' ).trigger( 'click' );\n\t\t\n\t\t\t\t\t} else {\n\t\t\n\t\t\t\t\t\ti++;\n\t\t\n\t\t\t\t\t}\n\t\t\n\t\t\t\t}, 1000 );\n\t\t\n\t\t\t},\n\t\t\n\t\t\t/**\n\t\t\t * Load repeater data from the server and create rows in the DOM\n\t\t\t *\n\t\t\t * @since 3.11.0\n\t\t\t * @since 3.12.1 Unknown.\n\t\t\t *\n\t\t\t * @return {void}\n\t\t\t */\n\t\t\tload: function() {\n\t\t\n\t\t\t\tvar self = this;\n\t\t\n\t\t\t\tself.$repeaters.each( function() {\n\t\t\n\t\t\t\t\tvar $repeater = $( this );\n\t\t\n\t\t\t\t\t// Ensure the repeater is only loaded once to prevent duplicates resulting from duplicating binding.\n\t\t\t\t\t// On certain sites which I cannot quite explain...\n\t\t\t\t\tif ( $repeater.hasClass( 'is-loaded' ) || $repeater.hasClass( 'processing' ) ) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\n\t\t\t\t\tself.store( $repeater, 'load', function( data ) {\n\t\t\n\t\t\t\t\t\t$repeater.addClass( 'is-loaded' );\n\t\t\n\t\t\t\t\t\t$.each( data.data, function( i, obj ) {\n\t\t\t\t\t\t\tself.add_row( $repeater, obj, false );\n\t\t\t\t\t\t} );\n\t\t\n\t\t\t\t\t\t// For each row within the repeater.\n\t\t\t\t\t\t$repeater.find( '.llms-repeater-rows .llms-repeater-row' ).each( function() {\n\t\t\t\t\t\t\tself.bind_row( $( this ) );\n\t\t\t\t\t\t} );\n\t\t\n\t\t\t\t\t} );\n\t\t\n\t\t\t\t} );\n\t\t\n\t\t\t},\n\t\t\n\t\t\t/**\n\t\t\t * Reindex a row\n\t\t\t *\n\t\t\t * Renames ids, attrs, and etc...\n\t\t\t *\n\t\t\t * Used when cloning the model for new rows.\n\t\t\t *\n\t\t\t * @since 3.11.0\n\t\t\t *\n\t\t\t * @param {Object} $row  jQuery selector for the row.\n\t\t\t * @param {string} index The index (or id) to use when renaming.\n\t\t\t * @return {string}\n\t\t\t */\n\t\t\treindex: function( $row, index ) {\n\t\t\n\t\t\t\tvar old_index = $row.attr( 'data-row-order' ),\n\t\t\t\t\t$ed       = $row.find( '.llms-mb-list.editor textarea' );\n\t\t\n\t\t\t\ttinyMCE.EditorManager.execCommand( 'mceRemoveEditor', true, $ed.attr( 'id' ) );\n\t\t\n\t\t\t\tfunction replace_attr( $el, attr ) {\n\t\t\t\t\t$el.each( function() {\n\t\t\t\t\t\tvar str = $( this ).attr( attr );\n\t\t\t\t\t\t$( this ).attr( attr, str.replace( old_index, index ) );\n\t\t\t\t\t} );\n\t\t\t\t};\n\t\t\n\t\t\t\t$row.attr( 'data-row-order', index );\n\t\t\n\t\t\t\treplace_attr( $row, 'data-row-order' );\n\t\t\n\t\t\t\treplace_attr( $row.find( 'button.insert-media' ), 'data-editor' );\n\t\t\n\t\t\t\treplace_attr( $row.find( 'input[name^=\"_llms\"], textarea[name^=\"_llms\"], select[name^=\"_llms\"]' ), 'id' );\n\t\t\t\treplace_attr( $row.find( 'input[name^=\"_llms\"], textarea[name^=\"_llms\"], select[name^=\"_llms\"]' ), 'name' );\n\t\t\t\treplace_attr( $row.find( '[data-controller]' ), 'data-controller' );\n\t\t\t\treplace_attr( $row.find( '[data-controller]' ), 'data-controller' );\n\t\t\t\treplace_attr( $row.find( 'button.wp-switch-editor' ), 'data-wp-editor-id' );\n\t\t\t\treplace_attr( $row.find( 'button.wp-switch-editor' ), 'id' );\n\t\t\t\treplace_attr( $row.find( '.wp-editor-tools' ), 'id' );\n\t\t\t\treplace_attr( $row.find( '.wp-editor-container' ), 'id' );\n\t\t\n\t\t\t\treturn $ed.attr( 'id' );\n\t\t\n\t\t\t},\n\t\t\n\t\t\t/**\n\t\t\t * Save a single repeaters data to the server\n\t\t\t *\n\t\t\t * @since 3.11.0\n\t\t\t * @since 3.13.0 Unknown.\n\t\t\t *\n\t\t\t * @param {Object} $repeater jQuery selector for a repeater element.\n\t\t\t * @return {void}\n\t\t\t */\n\t\t\tsave: function( $repeater ) {\n\t\t\t\t$repeater.trigger( 'llms-repeater-before-save', { $el: $repeater } );\n\t\t\t\tthis.store( $repeater, 'save' );\n\t\t\t},\n\t\t\n\t\t\t/**\n\t\t\t * Convert a repeater element into an array of objects that can be saved to the database\n\t\t\t *\n\t\t\t * @since 3.11.0\n\t\t\t *\n\t\t\t * @param {Object} $repeater A jQuery selector for a repeater element.\n\t\t\t * @return {void}\n\t\t\t */\n\t\t\tserialize: function( $repeater ) {\n\t\t\n\t\t\t\tvar rows = [];\n\t\t\n\t\t\t\t$repeater.find( '.llms-repeater-rows .llms-repeater-row' ).each( function() {\n\t\t\n\t\t\t\t\tvar obj = {};\n\t\t\n\t\t\t\t\t// Easy...\n\t\t\t\t\t$( this ).find( 'input[name^=\"_llms\"], select[name^=\"_llms\"]' ).each( function() {\n\t\t\t\t\t\tobj[ $( this ).attr( 'name' ) ] = $( this ).val();\n\t\t\t\t\t} );\n\t\t\n\t\t\t\t\t// Check if the textarea is a tinyMCE instance.\n\t\t\t\t\t$( this ).find( 'textarea[name^=\"_llms\"]' ).each( function() {\n\t\t\n\t\t\t\t\t\tvar name = $( this ).attr( 'name' );\n\t\t\n\t\t\t\t\t\t// If it is an editor.\n\t\t\t\t\t\tif ( tinyMCE.editors[ name ] ) {\n\t\t\t\t\t\t\tobj[ name ] = tinyMCE.editors[ name ].getContent();\n\t\t\t\t\t\t\t// Grab the val of the textarea.\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tobj[ name ] = $( this ).val();\n\t\t\t\t\t\t}\n\t\t\n\t\t\t\t\t} );\n\t\t\n\t\t\t\t\trows.push( obj );\n\t\t\n\t\t\t\t} );\n\t\t\n\t\t\t\treturn rows;\n\t\t\n\t\t\t},\n\t\t\n\t\t\t/**\n\t\t\t * AJAX method for interacting with the repeater's handler on the server\n\t\t\t *\n\t\t\t * @since 3.11.0\n\t\t\t *\n\t\t\t * @param {Object}   $repeater jQuery selector for the repeater element.\n\t\t\t * @param {string}   action    Action to call [save|load].\n\t\t\t * @param {Function} cb        Callback function.\n\t\t\t * @return {void}\n\t\t\t */\n\t\t\tstore: function( $repeater, action, cb ) {\n\t\t\n\t\t\t\tcb       = cb || function(){};\n\t\t\t\tvar self = this,\n\t\t\t\t\tdata = {\n\t\t\t\t\t\taction: $repeater.find( '.llms-repeater-field-handler' ).val(),\n\t\t\t\t\t\tstore_action: action,\n\t\t\t\t};\n\t\t\n\t\t\t\tif ( 'save' === action ) {\n\t\t\t\t\tdata.rows = self.serialize( $repeater );\n\t\t\t\t}\n\t\t\n\t\t\t\tLLMS.Ajax.call( {\n\t\t\t\t\tdata: data,\n\t\t\t\t\tbeforeSend: function() {\n\t\t\n\t\t\t\t\t\t$repeater.addClass( 'processing' );\n\t\t\t\t\t\tLLMS.Spinner.start( $repeater );\n\t\t\n\t\t\t\t\t},\n\t\t\t\t\tsuccess: function( r ) {\n\t\t\n\t\t\t\t\t\tcb( r );\n\t\t\t\t\t\tLLMS.Spinner.stop( $repeater );\n\t\t\t\t\t\t$repeater.removeClass( 'processing' );\n\t\t\n\t\t\t\t\t}\n\t\t\n\t\t\t\t} );\n\t\t\n\t\t\t}\n\t\t\n\t\t};\n\t\tthis.repeaters.init();\n\t\t\n\n\t\t/**\n\t\t * Initialize\n\t\t *\n\t\t * @since 3.0.0\n\t\t * @since 3.13.0 Unknown.\n\t\t * @since 4.19.0 Add `this.bind_mce_fixes()`.\n\t\t * @since 5.3.0 Bind editables when editable buttons are present in addition to anchors.\n\t\t *\n\t\t * @return   void\n\t\t */\n\t\tthis.init = function() {\n\n\t\t\tvar self = this;\n\n\t\t\t$( '.llms-select2-post' ).each( function() {\n\t\t\t\tself.post_select( $( this ) );\n\t\t\t} );\n\n\t\t\t$( '.llms-collapsible-group' ).llmsCollapsible();\n\n\t\t\tthis.bind_tabs();\n\n\t\t\tthis.bind_mce_fixes();\n\n\t\t\t// bind everything better and less repetitively...\n\t\t\tvar bindings = [\n\t\t\t\t{\n\t\t\t\t\tselector: $( '.llms-datepicker' ),\n\t\t\t\t\tfunc: 'bind_datepickers',\n\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tselector: $( '.llms-select2' ),\n\t\t\t\t\tfunc: function( $selector ) {\n\t\t\t\t\t\t$selector.llmsSelect2( {\n\t\t\t\t\t\t\twidth: '100%',\n\t\t\t\t\t\t} );\n\t\t\t\t\t},\n\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tselector: $( '.llms-select2-student' ),\n\t\t\t\t\tfunc: function( $selector ) {\n\t\t\t\t\t\t$selector.llmsStudentsSelect2();\n\t\t\t\t\t}\n\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tselector: $( 'input[type=\"checkbox\"][data-controls]' ),\n\t\t\t\t\tfunc: 'bind_cb_controllers',\n\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tselector: $( '[data-is-controller]' ),\n\t\t\t\t\tfunc: 'bind_controllers',\n\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tselector: $( '.llms-table' ),\n\t\t\t\t\tfunc: 'bind_tables',\n\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tselector: $( '.llms-merge-code-wrapper' ),\n\t\t\t\t\tfunc: 'bind_merge_code_buttons',\n\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tselector: $( 'a.llms-editable, button.llms-editable' ),\n\t\t\t\t\tfunc: 'bind_editables',\n\t\t\t},\n\t\t\t];\n\n\t\t\t// bind all the bindables but don't bind things in repeaters\n\t\t\t$.each( bindings, function( index, obj ) {\n\n\t\t\t\tif ( obj.selector.length ) {\n\n\t\t\t\t\t// reduce the selector to exclude items in a repeater\n\t\t\t\t\tvar reduced = obj.selector.filter( function() {\n\t\t\t\t\t\treturn ( 0 === $( this ).closest( '.llms-repeater-model' ).length );\n\t\t\t\t\t} );\n\n\t\t\t\t\t// bind by string\n\t\t\t\t\tif ( 'string' === typeof obj.func ) {\n\t\t\t\t\t\tself[ obj.func ]( reduced );\n\t\t\t\t\t}\n\t\t\t\t\t// bind by an anonymous function\n\t\t\t\t\telse if ( 'function' === typeof obj.func ) {\n\t\t\t\t\t\tobj.func( reduced );\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t\t// if a post type is set & a bind exists for it, bind it\n\t\t\tif ( window.llms.post.post_type ) {\n\n\t\t\t\tvar func = 'bind_' + window.llms.post.post_type;\n\n\t\t\t\tif ( 'function' === typeof this[func] ) {\n\n\t\t\t\t\tthis[func]();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\t/**\n\t\t * Bind checkboxes that control the display of other elements\n\t\t *\n\t\t * @param    obj   $controllers  jQuery selector for checkboxes to be bound as checkbox controllers\n\t\t * @return   void\n\t\t * @since    3.0.0\n\t\t * @version  3.11.0\n\t\t */\n\t\tthis.bind_cb_controllers = function( $controllers ) {\n\n\t\t\t$controllers = $controllers || $( 'input[type=\"checkbox\"][data-controls]' );\n\n\t\t\t$controllers.each( function() {\n\n\t\t\t\tvar $cb         = $( this ),\n\t\t\t\t\t$controlled = $( $cb.attr( 'data-controls' ) ).closest( '.llms-mb-list' );\n\n\t\t\t\t$cb.on( 'change', function() {\n\n\t\t\t\t\tif ( $( this ).is( ':checked' ) ) {\n\n\t\t\t\t\t\t$controlled.slideDown( 200 );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t$controlled.slideUp( 200 );\n\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t\t$cb.trigger( 'change' );\n\n\t\t\t} );\n\n\t\t};\n\n\t\t/**\n\t\t * Bind elements that control the display of other elements\n\t\t *\n\t\t * @param    obj   $controllers  jQuery selector for elements to be bound as checkbox controllers\n\t\t * @return   void\n\t\t * @since    3.0.0\n\t\t * @version  3.11.0\n\t\t */\n\t\tthis.bind_controllers = function( $controllers ) {\n\n\t\t\t$controllers = $controllers || $( '[data-is-controller]' );\n\n\t\t\t$controllers.each( function() {\n\n\t\t\t\tvar $el         = $( this ),\n\t\t\t\t\t$controlled = $( '[data-controller=\"#' + $el.attr( 'id' ) + '\"]' ),\n\t\t\t\t\tval;\n\n\t\t\t\t$el.on( 'change', function() {\n\n\t\t\t\t\tif ( 'checkbox' === $el.attr( 'type' ) ) {\n\n\t\t\t\t\t\tval = $el.is( ':checked' ) ? $el.val() : 'false';\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tval = $el.val();\n\n\t\t\t\t\t}\n\n\t\t\t\t\t$controlled.each( function() {\n\n\t\t\t\t\t\tvar possible = $( this ).attr( 'data-controller-value' ),\n\t\t\t\t\t\t\tvals     = [];\n\n\t\t\t\t\t\tif ( -1 !== possible.indexOf( ',' ) ) {\n\n\t\t\t\t\t\t\tvals = possible.split( ',' );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tvals.push( possible );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( -1 !== vals.indexOf( val ) ) {\n\n\t\t\t\t\t\t\t$( this ).slideDown( 200 );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t$( this ).slideUp( 200 );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} );\n\n\t\t\t\t} );\n\n\t\t\t\t$el.trigger( 'change' );\n\n\t\t\t} );\n\n\t\t};\n\n\t\t/**\n\t\t * Bind a single datepicker element\n\t\t *\n\t\t * @param    obj   $el  jQuery selector for the input to bind the datepicker to\n\t\t * @return   void\n\t\t * @since    3.0.0\n\t\t * @version  3.10.0\n\t\t */\n\t\tthis.bind_datepicker = function( $el ) {\n\t\t\tvar format  = $el.attr( 'data-format' ) || 'mm/dd/yy',\n\t\t\t\taltFormat = $el.attr( 'data-alt-format' ) || '',\n\t\t\t\taltField = $el.attr( 'data-alt-field' ) || '',\n\t\t\t\tmaxDate = $el.attr( 'data-max-date' ) || null,\n\t\t\t\tminDate = $el.attr( 'data-min-date' ) || null;\n\t\t\t$el.datepicker( {\n\t\t\t\tdateFormat: format,\n\t\t\t\tmaxDate: maxDate,\n\t\t\t\tminDate: minDate,\n\t\t\t\taltField: altField,\n\t\t\t\taltFormat: altFormat\n\t\t\t} ).on( \"keyup\", function() {\n\t\t\t\tvar date;\n\t\t\t\ttry {\n\t\t\t\t\tdate = $.datepicker.parseDate( $.datepicker._defaults.dateFormat, this.value );\n\t\t\t\t} catch ( e ) { }\n\n\t\t\t\tif ( !date && altField.length > 0 ) {\n\t\t\t\t\tif ( /^#[A-Za-z0-9\\-_]+$/.test( altField ) ) {\n\t\t\t\t\t\t$( altField ).val( \"\" );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} );\n\t\t}\n\n\t\t/**\n\t\t * Bind all LifterLMS datepickers\n\t\t *\n\t\t * @param    obj   $datepickers  jQuery selector for the elements to bind\n\t\t * @return   void\n\t\t * @since    3.0.0\n\t\t * @version  3.11.0\n\t\t */\n\t\tthis.bind_datepickers = function( $datepickers ) {\n\n\t\t\tvar self = this;\n\n\t\t\t$datepickers = $datepickers || $( '.llms-datepicker' );\n\n\t\t\t$datepickers.each( function() {\n\t\t\t\tself.bind_datepicker( $( this ) );\n\t\t\t} );\n\n\t\t};\n\n\t\t/**\n\t\t * Bind llms-editable metabox fields and related dom interactions\n\t\t *\n\t\t * @since 3.10.0\n\t\t * @since 3.28.0 Unknown.\n\t\t * @since 5.3.0 Bind editables when editable buttons are present in addition to anchors.\n\t\t *\n\t\t * @return void\n\t\t */\n\t\tthis.bind_editables = function() {\n\n\t\t\tvar self = this;\n\n\t\t\tfunction make_editable( $field ) {\n\n\t\t\t\tvar $label   = $field.find( 'label' ).clone(),\n\t\t\t\t\tname     = $field.attr( 'data-llms-editable' ),\n\t\t\t\t\ttype     = $field.attr( 'data-llms-editable-type' ),\n\t\t\t\t\trequired = $field.attr( 'data-llms-editable-required' ) || 'no',\n\t\t\t\t\tval      = $field.attr( 'data-llms-editable-value' ),\n\t\t\t\t\t$input;\n\n\t\t\t\trequired = ( 'yes' === required ) ? ' required=\"required\"' : '';\n\n\t\t\t\tif ( 'select' === type ) {\n\n\t\t\t\t\tvar options = JSON.parse( $field.attr( 'data-llms-editable-options' ) ),\n\t\t\t\t\t\tselected;\n\n\t\t\t\t\t$input = $( '<select name=\"' + name + '\"' + required + ' />' );\n\t\t\t\t\tfor ( var key in options ) {\n\t\t\t\t\t\tselected = val === key ? ' selected=\"selected\"' : '';\n\t\t\t\t\t\t$input.append( '<option value=\"' + key + '\"' + selected + '>' + options[ key ] + '</option>' );\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( 'datetime' === type ) {\n\n\t\t\t\t\t$input = $( '<div class=\"llms-datetime-field\" />' );\n\n\t\t\t\t\tval          = JSON.parse( val );\n\t\t\t\t\tvar format   = $field.attr( 'data-llms-editable-date-format' ) || '',\n\t\t\t\t\t\tmin_date = $field.attr( 'data-llms-editable-date-min' ) || '',\n\t\t\t\t\t\tmax_date = $field.attr( 'data-llms-editable-date-max' ) || '';\n\n\t\t\t\t\t$picker = $( '<input class=\"llms-date-input llms-datepicker\" data-format=\"' + format + '\" data-max-date=\"' + max_date + '\" data-min-date=\"' + min_date + '\" name=\"' + name + '[date]\" type=\"text\" value=\"' + val.date + '\">' );\n\t\t\t\t\tself.bind_datepicker( $picker );\n\t\t\t\t\t$input.append( $picker );\n\t\t\t\t\t$input.append( '<em>@</em>' );\n\n\t\t\t\t\t$input.append( '<input class=\"llms-time-input\" max=\"23\" min=\"0\" name=\"' + name + '[hour]\" type=\"number\" value=\"' + val.hour + '\">' );\n\t\t\t\t\t$input.append( '<em>:</em>' );\n\t\t\t\t\t$input.append( '<input class=\"llms-time-input\" max=\"59\" min=\"0\" name=\"' + name + '[minute]\" type=\"number\" value=\"' + val.minute + '\">' );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t$input = $( '<input name=\"' + name + '\" type=\"' + type + '\" value=\"' + val + '\"' + required + '>' );\n\t\t\t\t}\n\n\t\t\t\t$field.empty().append( $label ).append( $input );\n\t\t\t\tif ( 'select' === type ) {\n\t\t\t\t\tsetTimeout( function() {\n\t\t\t\t\t\t$input.trigger( 'change' );\n\t\t\t\t\t}, 100 );\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t\t$( 'a.llms-editable, button.llms-editable' ).on( 'click', function( e ) {\n\n\t\t\t\te.preventDefault();\n\n\t\t\t\tvar $btn = $( this ),\n\t\t\t\t\t$fields;\n\n\t\t\t\tif ( $btn.attr( 'data-fields' ) ) {\n\t\t\t\t\t$fields = $( $btn.attr( 'data-fields' ) );\n\t\t\t\t} else {\n\t\t\t\t\t$fields = $btn.closest( '.llms-metabox-section' ).find( '[data-llms-editable]' );\n\t\t\t\t}\n\n\t\t\t\t$btn.remove();\n\n\t\t\t\t$fields.each( function() {\n\t\t\t\t\tmake_editable( $( this ) );\n\t\t\t\t} );\n\n\t\t\t} );\n\n\t\t};\n\n\t\t/**\n\t\t * Bind Engagement post type JS\n\t\t *\n\t\t * @return   void\n\t\t * @since    3.1.0\n\t\t * @version  3.1.0\n\t\t */\n\t\tthis.bind_llms_engagement = function() {\n\n\t\t\tvar self = this;\n\n\t\t\t// when the engagement type changes we need to do some things to the UI\n\t\t\t$( '#_llms_engagement_type' ).on( 'change', function() {\n\n\t\t\t\t$( '#_llms_engagement' ).trigger( 'llms-engagement-type-change', $( this ).val() );\n\n\t\t\t} );\n\n\t\t\t// custom trigger when called when the engagement type changes\n\t\t\t$( '#_llms_engagement' ).on( 'llms-engagement-type-change', function( e, engagement_type ) {\n\n\t\t\t\tvar $select = $( this );\n\n\t\t\t\tswitch ( engagement_type ) {\n\n\t\t\t\t\t/**\n\t\t\t\t\t * core engagements related to a CPT\n\t\t\t\t\t */\n\t\t\t\t\tcase 'achievement':\n\t\t\t\t\tcase 'certificate':\n\t\t\t\t\tcase 'email':\n\n\t\t\t\t\t\tvar cpt = 'llms_' + engagement_type;\n\n\t\t\t\t\t\t$select.val( null ).attr( 'data-post-type', cpt ).trigger( 'change' );\n\t\t\t\t\t\tself.post_select( $select );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\t\t/**\n\t\t\t\t\t * Allow other plugins and developers to hook into the engagement type change action\n\t\t\t\t\t */\n\t\t\t\t\tdefault:\n\n\t\t\t\t\t\t$select.trigger( 'llms-engagement-type-change-external', engagement_type );\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t};\n\n\t\tthis.bind_course = function() {\n\t\t\tconst canEditPost =\n\t\t\t\twp?.data &&\n\t\t\t\ttypeof wp.data.dispatch === 'function' &&\n\t\t\t\twp.data.dispatch( 'core/editor' ) !== null &&\n\t\t\t\ttypeof wp.data.dispatch( 'core/editor' ).editPost === 'function';\n\n\t\t\tif ( ! canEditPost ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar $course_length = $( '#_llms_length' );\n\t\t\t$course_length.on( 'input change', function( e ) {\n\t\t\t\twp.data.dispatch( 'core/editor' ).editPost( {\n\t\t\t\t\tmeta: { _llms_length: e.target.value }\n\t\t\t\t} );\n\t\t\t} );\n\n\t\t};\n\n\t\t/**\n\t\t * Actions for memberships\n\t\t *\n\t\t * @since 3.0.0\n\t\t * @since 3.30.0 Made autoenroll table sortable, added AJAX save for adding new courses.\n\t\t * @version 3.30.0\n\t\t *\n\t\t * @return   void\n\t\t */\n\t\tthis.bind_llms_membership = function() {\n\n\t\t\tvar $table = $( '.llms-mb-list._llms_content_table' );\n\n\t\t\t/**\n\t\t\t * Hide/Show empty message header row depending on the number of rows in the tbody\n\t\t\t *\n\t\t\t * @since 3.30.0\n\t\t\t * @version 3.30.0\n\t\t\t *\n\t\t\t * @return void\n\t\t\t */\n\t\t\tfunction toggle_header_row() {\n\n\t\t\t\tvar $rows = $table.find( 'tbody tr' );\n\t\t\t\tif ( 1 === $rows.length ) {\n\t\t\t\t\t$rows.first().show();\n\t\t\t\t} else {\n\t\t\t\t\t$rows.first().hide();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * Retrieve an array of course IDs in the table.\n\t\t\t *\n\t\t\t * @since 3.30.0\n\t\t\t * @version 3.30.0\n\t\t\t *\n\t\t\t * @return array\n\t\t\t */\n\t\t\tfunction get_course_ids() {\n\n\t\t\t\tvar courses = [];\n\t\t\t\t$table.find( 'tbody tr a[href=\"#llms-course-remove\"]' ).each( function() {\n\t\t\t\t\tcourses.push( $( this ).attr( 'data-id' ) );\n\t\t\t\t} );\n\t\t\t\treturn courses;\n\n\t\t\t}\n\n\t\t\t// On init, toggle the header row visibility.\n\t\t\ttoggle_header_row();\n\n\t\t\t// remove auto-enroll course\n\t\t\t$table.on( 'click', 'a[href=\"#llms-course-remove\"]', function( e ) {\n\n\t\t\t\te.preventDefault();\n\n\t\t\t\tvar $el        = $( this ),\n\t\t\t\t\t$row       = $el.closest( 'tr' ),\n\t\t\t\t\t$container = $el.closest( '.llms-mb-list' );\n\n\t\t\t\tLLMS.Spinner.start( $container );\n\n\t\t\t\twindow.LLMS.Ajax.call( {\n\t\t\t\t\tdata: {\n\t\t\t\t\t\taction: 'membership_remove_auto_enroll_course',\n\t\t\t\t\t\tcourse_id: $el.attr( 'data-id' ),\n\t\t\t\t\t},\n\t\t\t\t\tbeforeSend: function() {\n\n\t\t\t\t\t\t$container.find( 'p.error' ).remove();\n\n\t\t\t\t\t},\n\t\t\t\t\tsuccess: function( r ) {\n\n\t\t\t\t\t\tif ( r.success ) {\n\n\t\t\t\t\t\t\t$row.fadeOut( 200 );\n\t\t\t\t\t\t\tsetTimeout( function() {\n\t\t\t\t\t\t\t\t$row.remove();\n\t\t\t\t\t\t\t\ttoggle_header_row();\n\t\t\t\t\t\t\t}, 400 );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t$container.prepend( '<p class=\"error\">' + r.message + '</p>' );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tLLMS.Spinner.stop( $container );\n\t\t\t\t\t},\n\t\t\t\t} );\n\n\t\t\t} );\n\n\t\t\t// bulk enroll all members into a course\n\t\t\t$table.on( 'click', 'a[href=\"#llms-course-bulk-enroll\"]', function( e ) {\n\n\t\t\t\te.preventDefault();\n\n\t\t\t\tvar $el        = $( this ),\n\t\t\t\t\t$row       = $el.closest( 'tr' ),\n\t\t\t\t\t$container = $el.closest( '.llms-mb-list' );\n\n\t\t\t\tif ( ! window.confirm( LLMS.l10n.translate( 'Click okay to enroll all active members into the selected course. Enrollment will take place in the background and you may leave your site after confirmation. This action cannot be undone!' ) ) ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tLLMS.Spinner.start( $container );\n\n\t\t\t\twindow.LLMS.Ajax.call( {\n\t\t\t\t\tdata: {\n\t\t\t\t\t\taction: 'bulk_enroll_membership_into_course',\n\t\t\t\t\t\tcourse_id: $el.attr( 'data-id' ),\n\t\t\t\t\t},\n\t\t\t\t\tbeforeSend: function() {\n\t\t\t\t\t\t$container.find( 'p.error' ).remove();\n\t\t\t\t\t},\n\t\t\t\t\tsuccess: function( r ) {\n\n\t\t\t\t\t\tif ( r.success ) {\n\n\t\t\t\t\t\t\t$el.replaceWith( '<strong style=\"float:right;\">' + r.data.message + '&nbsp;&nbsp;</strong>' );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t$container.prepend( '<p class=\"error\">' + r.message + '</p>' );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tLLMS.Spinner.stop( $container );\n\t\t\t\t\t},\n\t\t\t\t} );\n\n\t\t\t} );\n\n\t\t\t// Add an item to the autoenroll table on select.\n\t\t\t$( '#_llms_auto_enroll' ).on( 'change', function() {\n\n\t\t\t\tvar id    = $( this ).val(),\n\t\t\t\t\ttitle = $( this ).find( 'option[value=\"' + $( this ).val() + '\"]' ).text();\n\n\t\t\t\t// If there's no ID\n\t\t\t\tif ( ! id ) {\n\t\t\t\t\treturn;\n\t\t\t\t\t// Prevent Dupes.\n\t\t\t\t} else if ( -1 !== get_course_ids().indexOf( id ) ) {\n\n\t\t\t\t\talert( LLMS.l10n.replace( '\"%s\" is already in the course list.', { '%s': title } ) )\n\n\t\t\t\t\t// reset the select field.\n\t\t\t\t\t$( this ).val( '' ).trigger( 'change' );\n\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tvar $table = $( '.llms-mb-list._llms_content_table' );\n\t\t\t\t\t$tr    = $( '<tr />' );\n\n\t\t\t\t$tr.append( '<td><span class=\"dashicons dashicons-menu llms-drag-handle ui-sortable-handle\"></span></td>' );\n\t\t\t\t$tr.append( '<td><a href=\"' + window.llms.admin_url + 'post.php?action=edit&post=' + id + '\">' + title + '</a></td>' );\n\t\t\t\t$tr.append( '<td><a class=\"llms-button-danger small\" data-id=\"' + id + '\" href=\"#llms-course-remove\" style=\"float:right;\">' + LLMS.l10n.translate( 'Remove course' ) + '</a><a class=\"llms-button-secondary small\" data-id=\"' + id + '\" href=\"#llms-course-bulk-enroll\" style=\"float:right;margin-right:5px;\">' + LLMS.l10n.translate( 'Enroll All Members' ) + '</a></td>' );\n\n\t\t\t\t// append the element to the table.\n\t\t\t\t$table.find( 'table tbody' ).append( $tr );\n\n\t\t\t\t// reset the select field.\n\t\t\t\t$( this ).val( '' ).trigger( 'change' );\n\n\t\t\t\t// Show the header row.\n\t\t\t\ttoggle_header_row();\n\n\t\t\t\t// trigger a save event.\n\t\t\t\t$table.trigger( 'llms-save-autoenroll-courses' );\n\n\t\t\t} );\n\n\t\t\t// Make autoenrollment table sortable.\n\t\t\t$table.find( 'table tbody' ).sortable( {\n\t\t\t\thandle: '.llms-drag-handle',\n\t\t\t\t// Save order on stop.\n\t\t\t\tstop: function( event, ui ) {\n\t\t\t\t\tui.item.closest( '.llms-mb-list' ).trigger( 'llms-save-autoenroll-courses' );\n\t\t\t\t},\n\t\t\t} );\n\n\t\t\t// Save courses & course order.\n\t\t\t$table.on( 'llms-save-autoenroll-courses', function() {\n\n\t\t\t\tvar $container = $( this );\n\n\t\t\t\tLLMS.Spinner.start( $container );\n\n\t\t\t\twindow.LLMS.Ajax.call( {\n\t\t\t\t\tdata: {\n\t\t\t\t\t\taction: 'llms_save_membership_autoenroll_courses',\n\t\t\t\t\t\tcourses: get_course_ids(),\n\t\t\t\t\t},\n\t\t\t\t\terror: function( jqxhr, code, error_msg ) {\n\t\t\t\t\t\talert( error_msg );\n\t\t\t\t\t},\n\t\t\t\t\tcomplete: function() {\n\t\t\t\t\t\tLLMS.Spinner.stop( $container );\n\t\t\t\t\t},\n\t\t\t\t} );\n\n\t\t\t} );\n\n\t\t};\n\n\t\t/**\n\t\t * Actions for ORDERS\n\t\t *\n\t\t * @return   void\n\t\t * @since    3.0.0\n\t\t * @version  3.28.0\n\t\t */\n\t\tthis.bind_llms_order = function() {\n\n\t\t\t$( 'button[name=\"llms-refund-toggle\"]' ).on( 'click', function() {\n\n\t\t\t\tvar $btn              = $( this ),\n\t\t\t\t\t$row              = $btn.closest( 'tr' ),\n\t\t\t\t\ttxn_id            = $row.attr( 'data-transaction-id' ),\n\t\t\t\t\trefundable_amount = $btn.attr( 'data-refundable' ),\n\t\t\t\t\tgateway_supports  = ( '1' === $btn.attr( 'data-gateway-supports' ) ) ? true : false,\n\t\t\t\t\tgateway_title     = $btn.attr( 'data-gateway' ),\n\t\t\t\t\t$new_row          = $( '#llms-txn-refund-model .llms-txn-refund-form' ).clone(),\n\t\t\t\t\t$gateway_btn      = $new_row.find( '.gateway-btn' );\n\n\t\t\t\t// configure and add the form\n\t\t\t\tif ( 'remove' !== $btn.attr( 'data-action' ) ) {\n\n\t\t\t\t\t$btn.text( LLMS.l10n.translate( 'Cancel' ) );\n\t\t\t\t\t$btn.attr( 'data-action', 'remove' );\n\t\t\t\t\t$new_row.find( 'input' ).removeAttr( 'disabled' );\n\t\t\t\t\t$new_row.find( 'input[name=\"llms_refund_amount\"]' ).attr( 'max', refundable_amount );\n\t\t\t\t\t$new_row.find( 'input[name=\"llms_refund_txn_id\"]' ).val( txn_id );\n\n\t\t\t\t\tif ( gateway_supports ) {\n\t\t\t\t\t\t$gateway_btn.find( '.llms-gateway-title' ).text( gateway_title );\n\t\t\t\t\t\t$gateway_btn.show();\n\t\t\t\t\t}\n\n\t\t\t\t\t$row.after( $new_row );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t$btn.text( LLMS.l10n.translate( 'Refund' ) );\n\t\t\t\t\t$btn.attr( 'data-action', '' );\n\t\t\t\t\t$row.next( 'tr' ).remove();\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t\t$( 'button[name=\"llms-manual-txn-toggle\"]' ).on( 'click', function() {\n\n\t\t\t\tvar $btn     = $( this ),\n\t\t\t\t\t$row     = $btn.closest( 'tr' ),\n\t\t\t\t\t$new_row = $( '#llms-manual-txn-model .llms-manual-txn-form' ).clone();\n\n\t\t\t\t// configure and add the form\n\t\t\t\tif ( 'remove' !== $btn.attr( 'data-action' ) ) {\n\n\t\t\t\t\t$btn.text( LLMS.l10n.translate( 'Cancel' ) );\n\t\t\t\t\t$btn.attr( 'data-action', 'remove' );\n\t\t\t\t\t$new_row.find( 'input' ).removeAttr( 'disabled' );\n\n\t\t\t\t\t$row.after( $new_row );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t$btn.text( LLMS.l10n.translate( 'Record a Manual Payment' ) );\n\t\t\t\t\t$btn.attr( 'data-action', '' );\n\t\t\t\t\t$row.next( 'tr' ).remove();\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t\t// cache the original value when focusing on a payment gateway select\n\t\t\t// used below so the original field related data can be restored when switching back to the originally selected gateway\n\t\t\t$( '.llms-metabox' ).one( 'focus', '.llms-metabox-field[data-llms-editable=\"payment_gateway\"] select', function() {\n\n\t\t\t\tif ( ! $( this ).attr( 'data-original-value' ) ) {\n\t\t\t\t\t$( this ).attr( 'data-original-value', $( this ).val() );\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t\t// when selecting a new payment gateway get field data and update the dom to only display the fields\n\t\t\t// supported/needed by the newly selected gateway\n\t\t\t$( '.llms-metabox' ).on( 'change', '.llms-metabox-field[data-llms-editable=\"payment_gateway\"] select', function() {\n\n\t\t\t\tvar $select      = $( this ),\n\t\t\t\t\tgateway      = $select.val(),\n\t\t\t\t\tdata         = JSON.parse( $select.closest( '.llms-metabox-field' ).attr( 'data-gateway-fields' ) ),\n\t\t\t\t\tgateway_data = data[ gateway ];\n\n\t\t\t\tfor ( var field in gateway_data ) {\n\n\t\t\t\t\tvar $field = $( 'input[name=\"' + gateway_data[ field ].name + '\"]' ),\n\t\t\t\t\t\t$wrap  = $field.closest( '.llms-metabox-field' );\n\n\t\t\t\t\t// if the field is enabled show it the field and, if we're switching back to the originally selected\n\t\t\t\t\t// gateway, reload the value from the dom\n\t\t\t\t\tif ( gateway_data[ field ].enabled ) {\n\n\t\t\t\t\t\t$wrap.show();\n\t\t\t\t\t\t$field.attr( 'required', 'required' );\n\t\t\t\t\t\t$field.removeAttr( 'disabled' );\n\n\t\t\t\t\t\tif ( gateway === $select.attr( 'data-original-value' ) ) {\n\t\t\t\t\t\t\t$field.val( $wrap.attr( 'data-llms-editable-value' ) );\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// otherwise hide the field\n\t\t\t\t\t\t// this will ensure it gets updated in the database\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// always clear the value when switching\n\t\t\t\t\t\t// ensures that outdated data is removed from the DB\n\t\t\t\t\t\t$field.attr( 'value', '' );\n\n\t\t\t\t\t\t$field.removeAttr( 'required' );\n\t\t\t\t\t\t// $field.attr( 'disabled', 'disabled' );\n\t\t\t\t\t\t$wrap.hide();\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t};\n\n\t\t/**\n\t\t * Re-initializes TinyMCE Editors found within metaboxes\n\t\t *\n\t\t * @since 4.19.0\n\t\t * @since 4.21.2 Improve early return dependency check.\n\t\t * @since 7.0.1 Add `undefined` condition on early return check.\n\t\t *\n\t\t * @link https://github.com/gocodebox/lifterlms/issues/1553\n\t\t * @link https://github.com/gocodebox/lifterlms/pull/1618\n\t\t * @link https://github.com/gocodebox/lifterlms/issues/2298\n\t\t *\n\t\t * @return {void}\n\t\t */\n\t\t this.bind_mce_fixes = function() {\n\n\t\t\t// We need `wp.data` to proceed.\n\t\t\tif ( undefined === wp.data || [ null, undefined ].includes( wp.data.select( 'core/edit-post' ) ) ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tLLMS.wait_for(\n\t\t\t\tfunction() {\n\t\t\t\t\treturn undefined !== wp.data.select( 'core/edit-post' ).getMetaBoxesPerLocation( 'normal' );\n\t\t\t\t},\n\t\t\t\tfunction() {\n\n\t\t\t\t\tvar shouldRun = false;\n\t\t\t\t\t\tfind      = [ 'lifterlms-product', 'lifterlms-membership', 'lifterlms-course-options' ];\n\t\t\t\t\t\tmetaboxes = wp.data.select( 'core/edit-post' ).getMetaBoxesPerLocation( 'normal' );\n\n\t\t\t\t\t// Determine if we should run the fixer.\n\t\t\t\t\tfor ( var key in metaboxes ) {\n\t\t\t\t\t\tif ( -1 !== find.indexOf( metaboxes[ key ].id ) ) {\n\t\t\t\t\t\t\tshouldRun = true;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ! shouldRun ) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Fix them.\n\t\t\t\t\tvar toFix = {};\n\n\t\t\t\t\t/**\n\t\t\t\t\t * Determines if the TinyMCE instance should be fixed.\n\t\t\t\t\t *\n\t\t\t\t\t * @since 4.19.0\n\t\t\t\t\t *\n\t\t\t\t\t * @param {string} key Editor Key. This is the HTML id attribute of the textarea powering the editor instance.\n\t\t\t\t\t * @return {Boolean} Returns `true` if the editor should be fixed.\n\t\t\t\t\t */\n\t\t\t\t\tfunction llmsShouldFixTinyMCEEditor( key ) {\n\t\t\t\t\t\treturn ( 'excerpt' === key || -1 !== key.indexOf( 'llms' ) || -1 !== key.indexOf( 'lifterlms' ) )\n\t\t\t\t\t};\n\n\t\t\t\t\t// Loop through all the loaded editors.\n\t\t\t\t\tfor ( var key in tinyMCE.EditorManager.editors ) {\n\n\t\t\t\t\t\t// Mark LifterLMS editors to be fixed & de-init the editor.\n\t\t\t\t\t\tif ( llmsShouldFixTinyMCEEditor( key ) ) {\n\n\t\t\t\t\t\t\ttoFix[ key ] = tinyMCE.EditorManager.get( key );\n\t\t\t\t\t\t\ttinyMCE.EditorManager.execCommand( 'mceRemoveEditor', true, key );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// If we remove and re-init immediately it doesn't work, so we'll wait a bit and then re-init them all.\n\t\t\t\t\tsetTimeout( function() {\n\t\t\t\t\t\tfor ( var key in toFix ) {\n\t\t\t\t\t\t\ttinyMCE.EditorManager.init( toFix[ key ].settings || tinyMCE.EditorManager.settings );\n\t\t\t\t\t\t}\n\t\t\t\t\t}, 500 );\n\n\t\t\t\t}\n\t\t\t);\n\n\t\t};\n\n\t\t/**\n\t\t * Binds custom llms merge code buttons\n\t\t *\n\t\t * @return   void\n\t\t * @since    3.1.0\n\t\t * @version  3.9.2\n\t\t */\n\t\tthis.bind_merge_code_buttons = function( $wrappers ) {\n\n\t\t\t$wrappers = $wrappers || $( '.llms-merge-code-wrapper' );\n\n\t\t\t$wrappers.find( '.llms-merge-code-button' ).on( 'click', function() {\n\n\t\t\t\t$( this ).next( '.llms-merge-codes' ).toggleClass( 'active' );\n\n\t\t\t} );\n\n\t\t\t$wrappers.find( '.llms-merge-codes li' ).on( 'click', function() {\n\n\t\t\t\tvar $el     = $( this ),\n\t\t\t\t\t$parent = $el.closest( '.llms-merge-codes' ),\n\t\t\t\t\ttarget  = $parent.attr( 'data-target' ),\n\t\t\t\t\tcode    = $el.attr( 'data-code' );\n\n\t\t\t\t// dealing with a tinymce instance\n\t\t\t\tif ( -1 === target.indexOf( '#' ) ) {\n\n\t\t\t\t\tvar editor = window.tinymce.editors[ target ];\n\t\t\t\t\tif ( editor ) {\n\t\t\t\t\t\teditor.insertContent( code );\n\t\t\t\t\t} // fallback in case we can't access the editor directly\n\t\t\t\t\telse {\n\t\t\t\t\t\talert( LLMS.l10n.translate( 'Copy this code and paste it into the desired area' ) + ': ' + code );\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t\t// dealing with a DOM id\n\t\t\t\telse {\n\n\t\t\t\t\t$( target ).val( $( target ).val() + code );\n\n\t\t\t\t}\n\n\t\t\t\t$parent.removeClass( 'active' );\n\n\t\t\t} );\n\n\t\t};\n\n\t\t/**\n\t\t * Bind metabox tabs\n\t\t *\n\t\t * @return   void\n\t\t * @since    3.0.0\n\t\t * @version  3.0.0\n\t\t */\n\t\tthis.bind_tabs = function() {\n\t\t\t$( '.llms-nav-tab-wrapper .tabs li' ).on( 'click', function() {\n\n\t\t\t\tvar $btn     = $( this ),\n\t\t\t\t\t$metabox = $btn.closest( '.llms-mb-container' ),\n\t\t\t\t\ttab_id   = $btn.attr( 'data-tab' );\n\n\t\t\t\t$btn.siblings().removeClass( 'llms-active' );\n\n\t\t\t\t$metabox.find( '.tab-content' ).removeClass( 'llms-active' );\n\n\t\t\t\t$btn.addClass( 'llms-active' );\n\t\t\t\t$( '#' + tab_id ).addClass( 'llms-active' );\n\n\t\t\t} );\n\t\t};\n\n\t\t/**\n\t\t * Enable WP Post Table searches for applicable select2 boxes\n\t\t *\n\t\t * @since 3.0.0\n\t\t * @since 3.21.0 Unknown.\n\t\t * @since 6.0.0 Show element at 100% width if not displaying a view button.\n\t\t * @since 7.1.1 Fixed `home_url` for view button.\n\t\t *\n\t\t * @return void\n\t\t */\n\t\tthis.post_select = function( $el ) {\n\n\t\t\tvar multi = 'multiple' === $el.attr( 'multiple' ),\n\t\t\t\tnoViewBtn = $el.attr( 'data-no-view-button' ),\n\t\t\t\teditBtn = $el.attr( 'data-edit-button' );\n\n\t\t\t$el.llmsPostsSelect2( {\n\t\t\t\twidth: multi || noViewBtn ? '100%' : '65%',\n\t\t\t} );\n\n\t\t\tif ( multi || noViewBtn ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// add a \"View\" button to see what the selected page looks like, if it doesn't already exist.\n\t\t\t$btn = $el.next('.select2').next( 'a.llms-button-secondary' );\n\t\t\tif ( ! $btn.length ) {\n\t\t\t\tvar msg  = editBtn ? LLMS.l10n.translate( 'Edit' ) : LLMS.l10n.translate( 'View' ),\n\t\t\t\t\t$btn = $( '<a class=\"llms-button-secondary small\" style=\"margin-left:5px;\" target=\"_blank\" href=\"#\">' + msg + ' <i class=\"fa fa-external-link\" aria-hidden=\"true\"></i></a>' );\n\t\t\t\t$el.next( '.select2' ).after( $btn );\n\n\t\t\t\t$el.on( 'change', function() {\n\t\t\t\t\tvar id = $( this ).val();\n\t\t\t\t\tif ( id ) {\n\t\t\t\t\t\tif ( editBtn ) {\n\t\t\t\t\t\t\t$btn.attr( 'href', window.llms.admin_url + 'post.php?action=edit&post=' + parseInt( id )  ).show();\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t$btn.attr( 'href', window.llms.home_url + '/?p=' + parseInt( id ) ).show();\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$btn.hide();\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t\t}\n\n\t\t\t$el.trigger( 'change' );\n\t\t};\n\n\t\t/**\n\t\t * Bind dom events for .llms-tables\n\t\t *\n\t\t * @return   void\n\t\t * @since    3.0.0\n\t\t * @version  3.0.0\n\t\t */\n\t\tthis.bind_tables = function() {\n\n\t\t\t$( '.llms-table button[name=\"llms-expand-table\"]' ).on( 'click', function() {\n\n\t\t\t\tvar $btn   = $( this ),\n\t\t\t\t\t$table = $btn.closest( '.llms-table' )\n\n\t\t\t\t// switch the text on the button if alt text is found\n\t\t\t\tif ( $btn.attr( 'data-text' ) ) {\n\t\t\t\t\tvar text = $btn.text();\n\t\t\t\t\t$btn.text( $btn.attr( 'data-text' ) );\n\t\t\t\t\t$btn.attr( 'data-text', text );\n\t\t\t\t}\n\n\t\t\t\t// switch classes on all expandable elements\n\t\t\t\t$table.find( '.expandable' ).each( function() {\n\n\t\t\t\t\tif ( $( this ).hasClass( 'closed' ) ) {\n\t\t\t\t\t\t$( this ).addClass( 'opened' ).removeClass( 'closed' );\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$( this ).addClass( 'closed' ).removeClass( 'opened' );\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t} );\n\n\t\t};\n\n\t\t// go\n\t\tthis.init();\n\n\t};\n\n\t// initialize the object\n\twindow.llms.metaboxes = new Metaboxes();\n\n} )( jQuery );\n"],"sourceRoot":"../../js"}